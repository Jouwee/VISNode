{"output":{"input":[],"hashCode":1423208349,"position":{"x":729,"y":143},"connections":[{"leftNode":887766335,"rightAttribute":"value","leftAttribute":"value"}]},"nodes":[{"input":[{"parameterType":"visnode.pdi.process.ImageInput","parameterName":"file","value":{"type":"visnode.commons.MultiFileInput","data":{"file":["/home/jonatabecker/NetBeansProjects/VISNode/target/classes/visnode/pdi/process/image/Lenna.png"],"index":0}}}],"hashCode":1110126945,"position":{"x":50,"y":50},"processType":"visnode.pdi.process.InputProcess","connections":[]},{"input":[{"parameterType":"visnode.commons.ScriptValue","parameterName":"script","value":{"value":"function process(input) {\n    var image \u003d input\n    var resultImage \u003d ImageFactory.buildEmptyImage(image)\n    transform(\n        image,\n        resultImage,\n        [\n            [-1, 0, 0],\n            [0, 1, 0],\n            [0, 0, 1]\n        ]\n    )\n    return resultImage\n}\n\nfunction transform(image, resultImage, kernel) {\n    for (var c \u003d 0; c \u003c image.getChannelCount(); c++) {\n        for (var x \u003d 0; x \u003c image.getWidth(); x++) {\n            for (var y \u003d 0; y \u003c image.getHeight(); y++) {\n                applyKernel(\n                        image,\n                    resultImage,\n                    kernel,\n                    c,\n                    x,\n                    y,\n                    image.get(c, x, y)\n                )\n            }\n        }\n    }\n}\n\nfunction applyKernel(image, resultImage, kernel, channel, x, y, value) {\n    var halfX \u003d image.getWidth() / 2\n    var halfY \u003d image.getHeight() / 2\n    var tmpX \u003d x - halfX\n    var tmpY \u003d y - halfY\n    var newX \u003d Math.round(tmpX * kernel[0][0] + tmpY * kernel[0][1] + 1 * kernel[0][2])\n    var newY \u003d Math.round(tmpX * kernel[1][0] + tmpY * kernel[1][1] + 1 * kernel[1][2])\n    newX +\u003d halfX\n    newY +\u003d halfY\n    // Pixel position is right\n    if (newX \u003c image.getWidth() \u0026\u0026 newY \u003c image.getHeight() \u0026\u0026 newX \u003e\u003d 0 \u0026\u0026 newY \u003e\u003d 0) {\n        resultImage.set(channel, x, y, image.get(channel, newX, newY))\n    }\n}\n\nfunction toRad(Value) {\n    return Value * Math.PI / 180;\n}"}}],"hashCode":887766335,"position":{"x":367,"y":173},"processType":"visnode.pdi.process.ScriptProcess","connections":[{"leftNode":1110126945,"rightAttribute":"input","leftAttribute":"image"}]}]}