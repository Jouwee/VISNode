{"output":{"input":[],"hashCode":1036022327,"position":{"x":764,"y":105},"connections":[{"leftNode":1504272100,"rightAttribute":"value","leftAttribute":"value"}]},"nodes":[{"input":[{"parameterType":"visnode.pdi.process.ImageInput","parameterName":"file","value":{"type":"visnode.commons.MultiFileInput","data":{"file":["/home/jonatabecker/Desktop/Lenna.png"],"index":0}}}],"hashCode":847872268,"position":{"x":50,"y":50},"processType":"visnode.pdi.process.InputProcess","connections":[]},{"input":[{"parameterType":"visnode.commons.ScriptValue","parameterName":"script","value":{"value":"function process(image) {\n    var resultImage \u003d ImageFactory.buildEmptyImage(image);\n    convolution(image, resultImage);\n    return resultImage;\n}\n\nvar kernel \u003d [\n    [0, 0, -1, 0, 0],\n    [0, -1, -2, -1, 0],\n    [-1, -2, 16, -2, -1],\n    [0, -1, -2, -1, 0],\n    [0, 0, -1, 0, 0]\n];\n\nfunction convolution(image, resultImage) {\n    for (var channel \u003d 0; channel \u003c image.getChannelCount(); channel++) {\n        for (var x \u003d 0; x \u003c image.getWidth(); x++) {\n            for (var y \u003d 0; y \u003c image.getHeight(); y++) {\n                processKernel(image, resultImage, channel, x, y);\n            }\n        }\n    }\n}\n\nfunction processKernel(image, resultImage, channel, x, y) {\n    var sumValue \u003d 0;\n    var valueKernel \u003d 0;\n    var ksize \u003d kernel.length;\n    var center \u003d ksize - 2;\n    if (x \u003e center \u0026\u0026 x \u003c image.getWidth() - center \u0026\u0026 y \u003e center \u0026\u0026 y \u003c image.getHeight() - center) {\n        for (var i \u003d 0; i \u003c ksize; i++) {\n            for (var j \u003d 0; j \u003c ksize; j++) {\n                var xPos \u003d x + (i - center);\n                var yPos \u003d y + (j - center);\n                sumValue +\u003d image.get(channel, xPos, yPos) * kernel[i][j];\n                valueKernel +\u003d kernel[i][j];\n            }\n        }\n    } else {\n        for (var i \u003d 0; i \u003c ksize; i++) {\n            for (var j \u003d 0; j \u003c ksize; j++) {\n                var xPos \u003d image.limitX(x + (i - center));\n                var yPos \u003d image.limitY(y + (j - center));\n                sumValue +\u003d image.get(channel, xPos, yPos) * kernel[i][j];\n                valueKernel +\u003d kernel[i][j];\n            }\n        }\n    }\n    if (valueKernel \u003e 0) {\n        sumValue /\u003d valueKernel;\n    }\n    var value \u003d image.getPixelValueRange().limit(Math.floor(Math.round(sumValue)));\n    resultImage.set(channel, x, y, value);\n}\n\n\n"}}],"hashCode":1504272100,"position":{"x":386,"y":158},"processType":"visnode.pdi.process.ScriptProcess","connections":[{"leftNode":847872268,"rightAttribute":"input","leftAttribute":"image"}]}]}